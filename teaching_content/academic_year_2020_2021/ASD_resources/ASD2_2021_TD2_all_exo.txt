Algorithme exo1;

    
    Variables
        x,y,s:réel;
        p1,p2: ^réel;
    

Début
    x ◄- 5;
    y ◄- 0;
    p1 ◄- @x;
    p2 ◄- @y;

    s ◄- p1^ + p2^;
    Ecrire(s);

    s ◄- p1^ - p2^;
    Ecrire(s);

    s ◄- p1^ * p2^;
    Ecrire(s);

    Si (p2^ <> 0) Alors
        s ◄- p1^ / p2^;
        Ecrire(s);
    Sinon
        Ecrire("impossible");
    FinSi;
  
Fin.


Algorithme exo2;

    
    Variables
        x:entier;
        p1: ^entier;
    
Début
    x ◄- 5;
    p1 ◄- @x;

    Si (p1^ % 2 == 0) Alors
        Ecrire("pair");
    Sinon
        Ecrire("impair");
    FinSi;
Fin.


Algorithme exo3;
    
    Variables
        a,b:entier;
    

    Procédure inverse(p_a:^entier, p_b:^entier);
        
        Variables
            tmp:entier;
        
    Début
        Si (p_a^ * p_b^ >= 0) Alors
            tmp ◄- p_a^;
            p_a^ ◄- p_b^;
            p_b^ ◄- tmp;
        Sinon
            tmp ◄- p_a^;
            p_a^ ◄- p_a^ + p_b^;
            p_b^ ◄- tmp * p_b^;
            
        FinSi;
    FinProcédure

Début
    a ◄- -5;
    b ◄- 8;

    inverse(@a,@b);

    Ecrire(a,b);
Fin.



#include <stdio.h>
  
int main () {

   int T[6];
   int min, i;
   int *P;

   //P = &T[0];
   P = T; //&T[0]

   for (P=T  ; P < T + 6; P++)   {
    
       printf("T[%ld] = ", P - T); 
       scanf("%d", P);
   }

   //for (i = 0  ; i < 6; i++)   { 
   //    printf("T[%ld] = ", i); 
   //    scanf("%d", P + i);
   //}

   min = *T; // min = T[0];
   
   for (P=T+1; P < T + 6; P++)   {
      if (min > *P)
      {
         min = *P;
      }
   }

   //for (i=1; i < 6; i++)   {
   //   if (min > *(P++))
   //   {
   //      min = *(P++);
   //   }
      //P++;
   //}

   printf("Le min est %d\n", min);

   return 0;
}


#include <stdio.h>
  
int main () {

   int T[5];
   int X, N;
   int *P1, *P2;
   printf("Add elements \n");

   for (P1=T ; P1 < T + 5; P1++)   {
       printf("T[%ld] = ", P1 - T);
       scanf("%d", P1);
   }

   printf("Add element X \n");
   scanf("%d", &X);
   P2 = T;
   for (P1=T ; P1 < T + 5; P1++)   {
      *P2 = *P1;
      if (*P2!=X)
      {
         P2++;
      }
   }

   N = P2 - T;

   for (P1=T ; P1 < T + N; P1++)   {
       printf("%d ", *P1);
   }

   return 0;
}

